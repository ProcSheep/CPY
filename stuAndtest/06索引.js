
/** 
 * 联合索引等
 *    筛选 -> 查询， 先查询后面筛选无法利用索引
 *  联合索引的核心是最左前缀匹配原则：
      必须包含索引的最左字段，且尽量避免最左字段使用范围查询；否则后续的索引检测会失效
      字段顺序在查询中不影响（数据库会自动调整），但索引定义的顺序直接决定匹配效果；
      排序字段需与索引定义的顺序和方向一致(1/-1)，才能利用索引避免额外排序。

      联合索引的 “最左前缀匹配” 只关注查询中是否包含索引的前缀字段，与是否包含非索引字段（如 d）无关；
      非索引字段（如 d）只会增加 “索引筛选后” 的小范围扫描开销，不会影响索引对前缀字段（a、b、c）的利用；
      范围查询字段（如 b: { $gt: 100 }）只要位于索引的前缀位置（且前面字段是精准匹配），仍能部分利用索引缩小范围，不会让整个索引失效。


    MongoDB 中，范围查询（如$gte、$lte、$gt）后的字段无法利用索引。因此，若联合索引中存在多个范围查询字段，只有第一个范围查询字段之前的字段能有效利用索引，后续的范围查询字段会失效

    单个索引：mongodb 无法同时使用多个单字段索引（或效率极低）, 数据库通常会选择 “最优” 的一个单字段索引（如区分度最高的字段，比如character_uuid，因为 UUID 几乎唯一），用它过滤出一部分文档后，再对剩余文档逐条检查其他条件（包括$expr）。先通过character_uuid索引找到所有匹配的文档（假设有 1000 条）；然后逐条检查这 1000 条文档是否满足model_id、createdAt、$expr等条件。
 * 
 */
  // 联合 grade -> major ，缩小范围后，grade="大二"（缩小）-> major="计算机科学"（缩小） -> 数学>85
  // find(query, projection) 查询条件和输出格式
  db.students.find(
    {
      grade: "大二",
      major: "计算机科学",
      "score.math": {$gt: 85}
    }
  )



    // 升序
  db.students.createIndex({ major: 1, grade: 1 })

  db.students.find({
    major: "计算机科学",
    grade: {$in: ["大二","大三"]}
  })


  /**
   * $expr内部 可以写操作符， 处理复杂的，可能需要计算的，跨字段的数据比较等 
   * 常规操作符，处理简单的，固定值比较， 不跨字段的数据等 
   * field：字段 value： 值
   * 比如: field: { $lt: value }.   price: { $lt: 200 }
   * 则: $lt: [field1, field2].   $lt: ["$score.math", "$score.english"] (field需要加$)
   */
  // 单个字段
  db.students.find( {"score.math": {$gt: 85}, "score.math": {$lt: 90}} )


  // 跨字段，比较不同学科成绩，数学/英语
  db.students.find({
    $expr: {
      $lt: ["$score.math","$score.english"] // 数学 < 英语
    }
  })

  